name: Windows Build

on:
  push:
    tags:
      - 'v*'  # 只在推送版本标签时触发
    branches:
      - master  # 在推送到 master 分支时也触发
  pull_request:
    branches:
      - master  # 在提交 PR 到 master 分支时触发

env:
  BUILD_TYPE: Release
  WINDOWS_SDK_VERSION: 10.0.22621.0  # 指定 Windows SDK 版本

jobs:
  build:
    runs-on: windows-2022  # 使用 Windows Server 2022

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3
      with:
        vs-version: '[17.0,)'  # 使用 Visual Studio 2022 或更高版本
        msbuild-architecture: x64

    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build `
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} `
          -DCMAKE_SYSTEM_VERSION=${{env.WINDOWS_SDK_VERSION}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Create Release Package
      run: |
        # 创建发布目录
        mkdir ${{github.workspace}}/release
        
        # 复制主程序和文档
        copy ${{github.workspace}}/build/Release/SpinningMomo.exe ${{github.workspace}}/release/
        copy ${{github.workspace}}/docs/使用说明.txt ${{github.workspace}}/release/
        copy ${{github.workspace}}/LICENSE ${{github.workspace}}/release/

    - name: Create ZIP archive
      run: |
        $VERSION = "${{github.ref_name}}"
        $ARTIFACT_NAME = "SpinningMomo-$VERSION.zip"
        # 使用 PowerShell 的 Join-Path，但输出转换为 posix 风格的路径
        $ARTIFACT_PATH = (Join-Path ${{github.workspace}} $ARTIFACT_NAME).Replace('\', '/')
        Compress-Archive -Path "${{github.workspace}}/release/*" -DestinationPath $ARTIFACT_PATH
        # 将路径保存为环境变量
        echo "ARTIFACT_PATH=$ARTIFACT_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" | Out-File -FilePath $env:GITHUB_ENV -Append
        # 验证文件是否存在
        if (Test-Path $ARTIFACT_PATH) {
          echo "ZIP file created successfully at: $ARTIFACT_PATH"
        } else {
          echo "::error::Failed to create ZIP file at: $ARTIFACT_PATH"
          exit 1
        }

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: SpinningMomo-${{env.BUILD_TYPE}}
        path: ${{env.ARTIFACT_PATH}}
        retention-days: 5  # 构建产物保留 5 天

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')  # 只在推送标签时创建发布
      with:
        files: ${{env.ARTIFACT_PATH}}
        draft: false  # 直接发布，不是草稿
        prerelease: false  # 正式版本，不是预发布
        generate_release_notes: true  # 自动生成发布说明
        token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 自动提供的 token